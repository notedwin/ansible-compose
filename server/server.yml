
    -------------------------------------------------------------
    # - name: purge all docker images not in use or older than 1 week
    #   docker_image:
    #     name: "{{ item }}"
    #     state: absent
    #   loop: "{{ docker_image_facts.images | json_query('[?created < `{{ ansible_date_time.epoch }}` - 604800]') | map(attribute='id') | list }}"
    #   when: docker_image_facts.images | length > 0
    # -------------------------------------------------------------
    - name: Create Docker network
      docker_network:
        name: my_network
        driver: bridge
        state: present
    # --------------------------DATABASES--------------------------
    - name: Run postgres container
      docker_container:
        name: postgres
        image: postgres
        state: started
        restart_policy: always
        network_mode: my_network
        volumes:
          - /home/notedwin/postgres:/var/lib/postgresql/data
        env: POSTGRES_USER={{ env.USER }}
          POSTGRES_PASSWORD={{ env.PASSWORD }}
          POSTGRES_DB={{ env.DB }}
        ports:
          - "5432:5432"
    
    - name: Run Grafana container
      docker_container:
        name: grafana
        restart_policy: always
        image: grafana/grafana
        network_mode: my_network
        ports:
          - 3000:3000
        env: GF_SECURITY_ADMIN_PASSWORD={{ env.PASSWORD }}
          GF_SECURITY_ADMIN_USER={{ env.USER }}
          GF_FEATURE_TOGGLES_ENABLE=publicDashboards
        volumes:
          # move this to home notedwin
          - grafana:/var/lib/grafana

    - name: Run Code-server
      docker_container:
        name: code-server
        image: linuxserver/code-server
        network_mode: my_network
        restart_policy: always
        ports:
          - 8443:8443
        env: PUID=1000
          PGID=1000
          TZ=America/Chicago
          PASSWORD={{ env.PASSWORD }}
          SUDO_PASSWORD={{ env.PASSWORD }}
          SUDO="true"
        volumes:
          - /home/notedwin/code-server:/config
          - /home/notedwin:/home/notedwin
      




    - name: Run adguard container
      docker_container:
        name: adguard
        image: adguard/adguardhome
        state: started
        restart_policy: unless-stopped
        network_mode: my_network
        ports:
          - "53:53/tcp"
          - "53:53/udp"
          - "67:67/udp"
          - "68:68/udp"
          - "853:853/tcp"
          - "81:80/tcp"
          - "3001:3000/tcp"
        volumes:
          - /home/notedwin/adguard:/opt/adguardhome/work
          - /home/notedwin/adguard/conf:/opt/adguardhome/conf
    # -------------------------------------------------------------
    - name: Run Portainer container
      docker_container:
        name: portainer
        image: portainer/portainer
        restart_policy: unless-stopped
        state: started
        network_mode: my_network
        ports:
          - 9000:9000
        env:
          AGENT_CLUSTER_ADDR: tasks.agent
          PORTAINER_DATA: /data
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /var/lib/docker/volumes:/var/lib/docker/volumes
          - portainer_data:/data
