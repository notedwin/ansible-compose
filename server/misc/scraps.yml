-------- Apache Superset
# - name: Run Apache Superset docker container
#   docker_container:
#     name: superset
#     image: apache/superset
#     state: started
#     restart_policy: unless-stopped
#     network_mode: my_network
#     ports:
#       - "8088:8088"
#     env:
#       SUPERSET_SECRET_KEY=bruh_moment

# - name: Run bash commands to setup superset
#   shell: |
#     docker exec -it superset superset fab create-admin \
#       --username admin \
#       --firstname admin \
#       --lastname admin \
#       --email admin@superset.com \
#       --password admin
#     docker exec -it superset superset db upgrade
#     docker exec -it superset superset init

--- syslog

    # - name: Install system packages
    #   apt:
    #     name:
    #       - rsyslog
    #       - rsyslog-gnutls
    #       - rsyslog-pgsql
    #     state: present

    # - name: Copy rsyslog config file to rsyslog config directory
    #   copy:
    #     src: ./rsyslog.conf
    #     dest: /etc/rsyslog.conf
    #     owner: notedwin
    #     group: notedwin
    #     mode: 0644
    #     force: yes

# - name: Run rsyslog docker container
    #   docker_container:
    #     name: rsyslog
    #     image: rsyslog/syslog_appliance_alpine
    #     state: started
    #     restart_policy: unless-stopped
    #     network_mode: my_network
    #     ports:
    #       - "514:514"
    #       - "514:514/udp"
    #       - "514:514/tcp"
    #     volumes:
    #       - /home/notedwin/rsyslog/rsyslog.conf:/etc/rsyslog.conf


-- glances
 - name: Install glances package using bash
      shell: bash -c "curl -L https://bit.ly/glances | /bin/bash"
      args:
        creates: /usr/local/bin/glances


-- setting a static ip through the router
#  -------------------------------------------------------------
    # might be easier to set dhcp to static then reboot
    # - name: set dhcp to static
    #   become: yes
    #   nmcli:
    #     type: ethernet
    #     conn_name: enp3s0
    #     ip4: 192.168.0.108
    #     gw4: 192.168.0.1
    #     autoconnect: yes
    #     state: present
    #  -------------------------------------------------------------



# ----------------------------------------------------------
    - name: run vaultwarden
      docker_container:
        name: vaultwarden
        image: vaultwarden/server
        state: started
        restart_policy: unless-stopped
        ports:
          - "8080:80/tcp"
          - "3012:3012/tcp"
        volumes:
          - /home/notedwin/vaultwarden:/data
        env:
          WEBSOCKET_ENABLED: "true"
    # ----------------------------------------------------------
    - name: Run paperless-ngx
      docker_container:
        name: paperless-ngx
        image: paperlessngx/paperless-ngx
        state: started
        restart_policy: unless-stopped
        network_mode: my_network
        ports:
          - "8000:8000"
        healthcheck:
          test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8000"]
          interval: 30s
          timeout: 10s
          retries: 3
        volumes:
          - /home/notedwin/paperless:/usr/src/paperless/data
          - /home/notedwin/paperless:/usr/src/paperless/media
          - /home/notedwin/paperless:/usr/src/paperless/export
          - /home/notedwin/paperless:/usr/src/paperless/consume
          - /home/notedwin/paperless:/usr/src/paperless/static
        env:
          PAPERLESS_OCR_LANGUAGES: eng
          PAPERLESS_FORGIVING_OCR: "true"
          PAPERLESS_REDIS: redis://redis:6379
          PAPERLESS_CONSUMPTION_DIR: /usr/src/paperless/consume
          PAPERLESS_MEDIA_ROOT: /usr/src/paperless/media
          PAPERLESS_STATICDIR: /usr/src/paperless/static
          PAPERLESS_DATA_DIR: /usr/src/paperless/data
          PAPERLESS_EXPORT_DIR: /usr/src/paperless/export
          PAPERLESS_DBHOST: 192.168.0.108
          PAPERLESS_DBUSER: "{{ env.USER }}"
          PAPERLESS_DBPASS: "{{ env.PASSWORD }}"
          PAPERLESS_DBPORT: "5432"
          USERMAP_UID: "1000"
          USERMAP_GID: "1000"
          PAPERLESS_ADMIN_PASSWORD: "{{ env.PASSWORD }}"
          PAPERLESS_ADMIN_USER: "{{ env.USER }}"
          PAPERLESS_SECRET_KEY: edkjsfndsjfndsjkfnjsdkfnsdkjfnk
          PAPERLESS_TIME_ZONE: America/Chicago

    # --------------------------UNUSED------------------------------
    # - name: Run Nextcloud container
    #   docker_container:
    #     name: nextcloud
    #     image: nextcloud
    #     state: started
    #     restart_policy: always
    #     network_mode: my_network
    #     ports:
    #       - "8080:80"
    #     volumes:
    #       - /home/notedwin/nextcloud:/var/www/html
    #     env:
    #       MYSQL_ROOT_PASSWORD: {{ env.PASSWORD }}
    #       MYSQL_DATABASE: nextcloud

    # - name: Run cowrie container
    #   docker_container:
    #     name: cowrie
    #     image: cowrie/cowrie
    #     state: stopped
    #     restart_policy: always
    #     network_mode: my_network
    #     log_driver: syslog
    #     log_options:
    #       syslog-address: "unixgram:///dev/log"
    #       tag: "cowrie"
    #     ports:
    #       - "2222:2222"


    # - name: Run Syncthing
    #
    #   docker_container:
    #     name: syncthing
    #     image: syncthing/syncthing
    #     restart_policy: always
    #     network_mode: my_network
    #     ports:
    #       - 8384:8384
    #       - 22000:22000
    #       - 21027:21027/udp
    #     env:
    #       PUID=1000
    #       PGID=1000
    #       TZ=America/Chicago
    #       SYNCTHING_USER={{ env.USER }}
    #       SYNCTHING_PASSWORD={{ env.PASSWORD }}
    #     volumes:
    #       - /home/notedwin/syncthing:/config
    #       - /home/notedwin:/home/notedwin
    # -------------------------------------------------------------
    - name: Run Redis container
      docker_container:
        name: redis
        image: redis
        network_mode: my_network
        restart_policy: always
        ports:
          - 6379:6379
        env: REDIS_PASSWORD={{ env.PASSWORD }}
          REDIS_USER={{ env.USER }}
    # --------------------------SERVICES---------------------------


    - name: Run Transmission docker container
      docker_container:
        restart: yes
        name: transmission
        image: lscr.io/linuxserver/transmission:latest
        state: started
        restart_policy: unless-stopped
        network_mode: my_network
        ports:
          - "9091:9091"
          - "51413:51413"
          - "51413:51413/udp"
        volumes:
          - /home/notedwin/Downloads:/downloads
        env:
          PUID=1000
          PGID=1000
          TZ=America/Chicago


        - name: Run Code-server
      docker_container:
        name: code-server
        image: linuxserver/code-server
        network_mode: my_network
        restart_policy: always
        ports:
          - 8443:8443
        env: PUID=1000
          PGID=1000
          TZ=America/Chicago
          PASSWORD={{ env.PASSWORD }}
          SUDO_PASSWORD={{ env.PASSWORD }}
          SUDO="true"
        volumes:
          - /home/notedwin/code-server:/config
          - /home/notedwin:/home/notedwin
      